{"version":3,"sources":["library/common/Types/enums.tsx","library/utilities/ContractData.tsx","main/api/web3.service.tsx","library/utilities/DashboardFormsConfig.ts","resources/Styles/GlobalStyles.tsx","modules/Dashboard/Components/FormWidget/FormTitle/index.tsx","modules/Dashboard/Components/FormWidget/index.tsx","library/common/Components/PageTitle/index.tsx","modules/Dashboard/Components/DataTable/index.tsx","modules/Dashboard/index.tsx","modules/Dashboard/Dashboard.tsx","resources/Images/metamask.jpg","modules/WalletConnecter/Components/MetamaskConnecter/index.tsx","modules/WalletConnecter/index.tsx","modules/WalletConnecter/WalletConnecter.tsx","library/utilities/connectWallet.ts","main/routes/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AttributeTypes","FormTypes","ContractData","changeTokenAttribute","queryInfo","attributeType","tokenId","newInformation","Age","contract","methods","changeAge","send","querySender","EyesColor","changeEyesColor","HairColor","changeHairColor","Height","Name","changeHeight","getOwner","owner","call","getTokenLength","tokensLength","getTokenData","tokenData","DashboardFormsConfig","title","forOwner","forMinter","formType","GrantMinter","fields","controlId","label","value","type","formFunc","address","grantMinter","ChangeHeight","web3Service","ChangeName","ChangeHairColor","MintToken","name","hairColor","eyesColor","height","age","mintToken","RemoveMinter","removeMinter","ChangeAge","ChangeEyesColor","TransferToken","safeTransferFrom","from","ModuleWrap","styled","div","FormTitle","props","className","toUpperCase","FormWidget","formDetails","handleSubmit","formTitle","useState","fieldsData","setFieldsData","values","setValues","useEffect","currentValues","newValues","reduce","obj","field","Object","assign","Form","onSubmit","e","preventDefault","submitData","map","element","index","Group","Control","required","placeholder","onChange","fieldId","target","Button","variant","block","PageTitle","DataTable","rows","Table","responsive","rowData","keys","cellData","i","Dashboard","contextInformation","setContextInformation","setContract","isOwner","setIsOwner","isMinter","setIsMinter","rolesChecked","setRolesChecked","tableData","setTableData","dataFetched","setFetchedData","getQueryInfo","useCallback","walletAddress","checkRoles","a","getTokenInformation","id","mintedTimeStamp","moment","unix","mintedTimestamp","format","fetchTableData","tokenLength","push","web3Instance","Web3","provider","eth","Contract","filterFormsByRoles","initiateWeb3","connectWallet","historyState","history","location","state","detectEthereumProvider","mustBeMetaMask","then","result","makeToast","text","option","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toast","success","error","addMintedTokenToTable","oldTableData","updateTokenAndAddToTable","formValues","newArray","reason","secondColumn","Math","ceil","DashboardFormConfig","length","Row","Col","xs","slice","MetamaskConnecter","connectWalletAndGetAddress","Image","onClick","src","metamask","WalletConnecter","shouldAutoConnect","setAddress","showWarning","setShowWarning","useHistory","pathname","catch","console","log","status","autoLogin","getAccounts","userAddress","requestAccounts","connectedStatus","routes","exact","path","render","AppWrap","App","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9bcdb44.chunk.js","sourcesContent":["export enum AttributeTypes {\n    Age = 'age',\n    EyesColor = 'eyesColor',\n    HairColor = 'hairColor',\n    Name = 'name',\n    Height = 'height'\n}\n\nexport enum FormTypes {\n    GrantMinter,\n    RemoveMinter,\n    TransferToken,\n    MintToken,\n    ChangeAge,\n    ChangeEyesColor,\n    ChangeHairColor,\n    ChangeHeight,\n    ChangeName\n}","export const ContractData = {\n    \"address\":\"0x871e46Bf148d90d334a719dEf062Fd0ed33Bb3aF\",\n    \"abi\": [\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"name_\",\n                 \"type\":\"string\"\n              },\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"symbol_\",\n                 \"type\":\"string\"\n              }\n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"constructor\"\n        },\n        {\n           \"anonymous\":false,\n           \"inputs\":[\n              {\n                 \"indexed\":true,\n                 \"internalType\":\"address\",\n                 \"name\":\"owner\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"indexed\":true,\n                 \"internalType\":\"address\",\n                 \"name\":\"approved\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"indexed\":true,\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"name\":\"Approval\",\n           \"type\":\"event\"\n        },\n        {\n           \"anonymous\":false,\n           \"inputs\":[\n              {\n                 \"indexed\":true,\n                 \"internalType\":\"address\",\n                 \"name\":\"owner\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"indexed\":true,\n                 \"internalType\":\"address\",\n                 \"name\":\"operator\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"indexed\":false,\n                 \"internalType\":\"bool\",\n                 \"name\":\"approved\",\n                 \"type\":\"bool\"\n              }\n           ],\n           \"name\":\"ApprovalForAll\",\n           \"type\":\"event\"\n        },\n        {\n           \"anonymous\":false,\n           \"inputs\":[\n              {\n                 \"indexed\":true,\n                 \"internalType\":\"address\",\n                 \"name\":\"previousOwner\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"indexed\":true,\n                 \"internalType\":\"address\",\n                 \"name\":\"newOwner\",\n                 \"type\":\"address\"\n              }\n           ],\n           \"name\":\"OwnershipTransferred\",\n           \"type\":\"event\"\n        },\n        {\n           \"anonymous\":false,\n           \"inputs\":[\n              {\n                 \"indexed\":true,\n                 \"internalType\":\"address\",\n                 \"name\":\"from\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"indexed\":true,\n                 \"internalType\":\"address\",\n                 \"name\":\"to\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"indexed\":true,\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"name\":\"Transfer\",\n           \"type\":\"event\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"to\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"name\":\"approve\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"owner\",\n                 \"type\":\"address\"\n              }\n           ],\n           \"name\":\"balanceOf\",\n           \"outputs\":[\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"stateMutability\":\"view\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              },\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"age\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"name\":\"changeAge\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              },\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"eyesColor\",\n                 \"type\":\"string\"\n              }\n           ],\n           \"name\":\"changeEyesColor\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              },\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"hairColor\",\n                 \"type\":\"string\"\n              }\n           ],\n           \"name\":\"changeHairColor\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              },\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"height\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"name\":\"changeHeight\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              },\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"name\",\n                 \"type\":\"string\"\n              }\n           ],\n           \"name\":\"changeName\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"name\":\"getApproved\",\n           \"outputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"\",\n                 \"type\":\"address\"\n              }\n           ],\n           \"stateMutability\":\"view\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"minter\",\n                 \"type\":\"address\"\n              }\n           ],\n           \"name\":\"grantMinter\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"owner\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"operator\",\n                 \"type\":\"address\"\n              }\n           ],\n           \"name\":\"isApprovedForAll\",\n           \"outputs\":[\n              {\n                 \"internalType\":\"bool\",\n                 \"name\":\"\",\n                 \"type\":\"bool\"\n              }\n           ],\n           \"stateMutability\":\"view\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"\",\n                 \"type\":\"address\"\n              }\n           ],\n           \"name\":\"isMinter\",\n           \"outputs\":[\n              {\n                 \"internalType\":\"bool\",\n                 \"name\":\"\",\n                 \"type\":\"bool\"\n              }\n           ],\n           \"stateMutability\":\"view\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"name\",\n                 \"type\":\"string\"\n              },\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"hairColor\",\n                 \"type\":\"string\"\n              },\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"eyesColor\",\n                 \"type\":\"string\"\n              },\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"height\",\n                 \"type\":\"uint256\"\n              },\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"age\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"name\":\"mintToken\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              \n           ],\n           \"name\":\"name\",\n           \"outputs\":[\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"\",\n                 \"type\":\"string\"\n              }\n           ],\n           \"stateMutability\":\"view\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              \n           ],\n           \"name\":\"owner\",\n           \"outputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"\",\n                 \"type\":\"address\"\n              }\n           ],\n           \"stateMutability\":\"view\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"name\":\"ownerOf\",\n           \"outputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"\",\n                 \"type\":\"address\"\n              }\n           ],\n           \"stateMutability\":\"view\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"exMinter\",\n                 \"type\":\"address\"\n              }\n           ],\n           \"name\":\"removeMinter\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              \n           ],\n           \"name\":\"renounceOwnership\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"from\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"to\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"name\":\"safeTransferFrom\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"from\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"to\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              },\n              {\n                 \"internalType\":\"bytes\",\n                 \"name\":\"_data\",\n                 \"type\":\"bytes\"\n              }\n           ],\n           \"name\":\"safeTransferFrom\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"operator\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"internalType\":\"bool\",\n                 \"name\":\"approved\",\n                 \"type\":\"bool\"\n              }\n           ],\n           \"name\":\"setApprovalForAll\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"bytes4\",\n                 \"name\":\"interfaceId\",\n                 \"type\":\"bytes4\"\n              }\n           ],\n           \"name\":\"supportsInterface\",\n           \"outputs\":[\n              {\n                 \"internalType\":\"bool\",\n                 \"name\":\"\",\n                 \"type\":\"bool\"\n              }\n           ],\n           \"stateMutability\":\"view\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              \n           ],\n           \"name\":\"symbol\",\n           \"outputs\":[\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"\",\n                 \"type\":\"string\"\n              }\n           ],\n           \"stateMutability\":\"view\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"name\":\"tokenData\",\n           \"outputs\":[\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"name\",\n                 \"type\":\"string\"\n              },\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"mintedTimestamp\",\n                 \"type\":\"uint256\"\n              },\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"hairColor\",\n                 \"type\":\"string\"\n              },\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"eyesColor\",\n                 \"type\":\"string\"\n              },\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"height\",\n                 \"type\":\"uint256\"\n              },\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"age\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"stateMutability\":\"view\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"name\":\"tokenURI\",\n           \"outputs\":[\n              {\n                 \"internalType\":\"string\",\n                 \"name\":\"\",\n                 \"type\":\"string\"\n              }\n           ],\n           \"stateMutability\":\"view\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              \n           ],\n           \"name\":\"tokensLength\",\n           \"outputs\":[\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"stateMutability\":\"view\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"from\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"to\",\n                 \"type\":\"address\"\n              },\n              {\n                 \"internalType\":\"uint256\",\n                 \"name\":\"tokenId\",\n                 \"type\":\"uint256\"\n              }\n           ],\n           \"name\":\"transferFrom\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        },\n        {\n           \"inputs\":[\n              {\n                 \"internalType\":\"address\",\n                 \"name\":\"newOwner\",\n                 \"type\":\"address\"\n              }\n           ],\n           \"name\":\"transferOwnership\",\n           \"outputs\":[\n              \n           ],\n           \"stateMutability\":\"nonpayable\",\n           \"type\":\"function\"\n        }\n     ]\n}\n\n","import { AttributeTypes } from 'library/common/Types/enums';\n\nexport const grantMinter = (queryInfo: any, { address }: any) => {\n    return queryInfo.contract.methods.grantMinter(address)\n        .send(queryInfo.querySender);\n}\n\nexport const removeMinter = (queryInfo: any, { address }: any) => {\n    return queryInfo.contract.methods.removeMinter(address)\n        .send(queryInfo.querySender);\n}\n\nexport const transferToken = (queryInfo: any, { address, tokenId }: any) => {\n    return queryInfo.contract.methods.safeTransferFrom(queryInfo.querySender.from, address, tokenId)\n        .send(queryInfo.querySender);\n}\n\nexport const mintToken = (\n    queryInfo: any,\n    {\n        name,\n        hairColor,\n        eyesColor,\n        height,\n        age\n    }: any\n) => {    \n    return queryInfo.contract.methods.mintToken(\n        name,\n        hairColor,\n        eyesColor,\n        height,\n        age\n    ).send(queryInfo.querySender);\n}\n\nexport const changeTokenAttribute = (\n    queryInfo: any,\n    { tokenId, newInformation }: any,\n    attributeType: string,\n) => {\n    switch (attributeType) {\n        case AttributeTypes.Age:\n            return queryInfo.contract.methods.changeAge(tokenId, newInformation)\n                .send(queryInfo.querySender);\n\n        case AttributeTypes.EyesColor:\n            return queryInfo.contract.methods.changeEyesColor(tokenId, newInformation)\n                .send(queryInfo.querySender);\n\n        case AttributeTypes.HairColor:\n            return queryInfo.contract.methods.changeHairColor(tokenId, newInformation)\n                .send(queryInfo.querySender);\n\n        case AttributeTypes.Height:\n            return queryInfo.contract.methods.changeHeight(tokenId, newInformation)\n                .send(queryInfo.querySender);\n\n        case AttributeTypes.Name:\n            return queryInfo.contract.methods.changeHeight(tokenId, newInformation)\n                .send(queryInfo.querySender);\n    }\n}\n\nexport const getOwner = (queryInfo: any) => {\n    return queryInfo.contract.methods.owner().call();\n}\n\nexport const addressIsMinter = (queryInfo: any) => {\n    return queryInfo.contract.methods.isMinter(queryInfo.querySender.from).call();\n}\n\nexport const getTokenLength = (queryInfo: any) => {\n    return queryInfo.contract.methods.tokensLength().call();\n}\n\nexport const getTokenData = (queryInfo: any, tokenId: number) => {\n    return queryInfo.contract.methods.tokenData(tokenId).call();\n}","import * as web3Service from 'main/api/web3.service';\nimport { FormTypes } from 'library/common/Types/enums';\n\nconst DashboardFormsConfig = [\n    {\n        title: 'Grant Minter',\n        forOwner: true,\n        forMinter: false,\n        formType: FormTypes.GrantMinter,\n        fields: [{\n            controlId: 'address',\n            label: 'Address',\n            value: '',\n            type: 'text'\n        }],\n        formFunc: web3Service.grantMinter\n    },\n    {\n        title: 'Change Height',\n        forOwner: true,\n        forMinter: true,\n        formType: FormTypes.ChangeHeight,\n        fields: [{\n            controlId: 'tokenId',\n            label: 'Token ID',\n            value: '',\n            type: 'text'\n        },\n        {\n            controlId: 'newInformation',\n            label: 'New Height',\n            value: '',\n            type: 'text'\n        }],\n        formFunc: web3Service.changeTokenAttribute\n    },\n    {\n        title: 'Change Name',\n        forOwner: true,\n        forMinter: true,\n        formType: FormTypes.ChangeName,\n        fields: [{\n            controlId: 'tokenId',\n            label: 'Token ID',\n            value: '',\n            type: 'text'\n        },\n        {\n            controlId: 'newInformation',\n            label: 'New Name',\n            value: '',\n            type: 'text'\n        }],\n        formFunc: web3Service.changeTokenAttribute\n    },\n    {\n        title: 'Change Hair Color',\n        forOwner: true,\n        forMinter: true,\n        formType: FormTypes.ChangeHairColor,\n        fields: [{\n            controlId: 'tokenId',\n            label: 'Token ID',\n            value: '',\n            type: 'text'\n        },\n        {\n            controlId: 'newInformation',\n            label: 'New Hair Color',\n            value: '',\n            type: 'text'\n        }],\n        formFunc: web3Service.changeTokenAttribute\n    },\n    {\n        title: 'Mint Token',\n        forOwner: false,\n        forMinter: true,\n        formType: FormTypes.MintToken,\n        fields: [{\n            controlId: 'name',\n            label: 'Token Name',\n            value: '',\n            type: 'text'\n        },\n        {\n            controlId: 'age',\n            label: 'Token Age',\n            value: '',\n            type: 'text'\n        },\n        {\n            controlId: 'eyesColor',\n            label: 'Token Eyes Color',\n            value: '',\n            type: 'text'\n        },\n        {\n            controlId: 'hairColor',\n            label: 'Token Hair Color',\n            value: '',\n            type: 'text'\n        },\n        {\n            controlId: 'height',\n            label: 'Token Height',\n            value: '',\n            type: 'text'\n        }],\n        formFunc: web3Service.mintToken\n    },\n    {\n        title: 'Remove Minter',\n        forOwner: true,\n        forMinter: false,\n        formType: FormTypes.RemoveMinter,\n        fields: [{\n            controlId: 'address',\n            label: 'Address',\n            value: '',\n            type: 'text'\n        }],\n        formFunc: web3Service.removeMinter\n    },\n    {\n        title: 'Change Age',\n        forOwner: true,\n        forMinter: true,\n        formType: FormTypes.ChangeAge,\n        fields: [{\n            controlId: 'tokenId',\n            label: 'Token ID',\n            value: '',\n            type: 'text'\n        },\n        {\n            controlId: 'newInformation',\n            label: 'New Age',\n            value: '',\n            type: 'text'\n        }],\n        formFunc: web3Service.changeTokenAttribute\n    },\n    {\n        title: 'Change Eyes Color',\n        forOwner: true,\n        forMinter: true,\n        formType: FormTypes.ChangeEyesColor,\n        fields: [{\n            controlId: 'tokenId',\n            label: 'Token ID',\n            value: '',\n            type: 'text'\n        },\n        {\n            controlId: 'newInformation',\n            label: 'New Eyes Color',\n            value: '',\n            type: 'text'\n        }],\n        formFunc: web3Service.changeTokenAttribute\n    },\n    {\n        title: 'Transfer Token',\n        forOwner: true,\n        forMinter: true,\n        formType: FormTypes.TransferToken,\n        fields: [{\n            controlId: 'tokenId',\n            label: 'Token ID',\n            value: '',\n            type: 'text'\n        },\n        {\n            controlId: 'address',\n            label: 'Transfer to (address):',\n            value: '',\n            type: 'text'\n        }],\n        formFunc: web3Service.transferToken\n    },\n]\n\nexport default DashboardFormsConfig;","import styled from 'styled-components';\n\n\nexport const ModuleWrap = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;","import React from 'react';\n\nimport './styles.scss';\n\nconst FormTitle = (props: any): JSX.Element => {\n\n    const { title } = props;\n    \n    return (\n        <div className=\"form-title\">\n            {title.toUpperCase()}\n        </div>\n    )\n};\n\nexport default FormTitle;\n","import React, { useEffect, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nimport { FormTypes } from 'library/common/Types/enums';\nimport FormTitle from './FormTitle';\n\nimport './styles.scss';\n\ninterface IField {\n    [key: string]: string\n}\n\ninterface IProps{\n    formDetails: {\n        formTitle: string,\n        formType: FormTypes,\n        fields: Array<IField>,\n        formFunc: any\n    },\n    handleSubmit: any\n} \n\ninterface IValue {\n    [value: string]: string\n}\n\nconst FormWidget = ( { formDetails, handleSubmit }: IProps ): JSX.Element => {  \n\n    const { formTitle, formType, fields, formFunc } = formDetails;\n\n    const [fieldsData, setFieldsData] = useState(fields);\n    const [values, setValues] = useState<IValue>({});\n\n    const fieldChanged = (fieldId: string, value: string) => {\n        setValues((currentValues) => {\n            currentValues[`${fieldId}`] = value;\n            return currentValues;\n        });\n\n        setFieldsData(fieldsData => {\n            return [...fieldsData];\n        });\n    };\n\n    useEffect(() => {\n        setValues(currentValues => {\n            const newValues = fieldsData.reduce((obj, field) => {\n                obj[field.controlId] = field.value;\n\n                return obj;\n            }, {});\n\n            return Object.assign({}, newValues, currentValues);\n        })\n    }, [fieldsData])\n\n    const resetForm = () => {\n        setValues(currentValues => {\n            return Object.assign({});\n        })\n\n        setFieldsData(fieldsData => {\n            return [...fieldsData];\n        });\n    }\n\n    const formSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const submitData = {...values};\n        handleSubmit(formFunc, formType, submitData);\n        resetForm();\n    }\n\n    return (\n        <div className=\"widget-container\">\n            <div className=\"form-container\">\n                <FormTitle title={formTitle} />\n                <Form onSubmit={formSubmit}>\n                    {fieldsData.map((element, index) => (\n                        <Form.Group key={index} controlId={element.controlId}>\n                            <Form.Control\n                                required\n                                placeholder={element.label}\n                                type={element.type || 'text'}\n                                onChange={(e) => fieldChanged(element.controlId, e.target.value)}\n                                value={values[element.controlId] || ''}\n                                >\n                            </Form.Control>\n                        </Form.Group>\n                    ))}\n                    <Button variant=\"success\" type=\"submit\" block>\n                        SUBMIT\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    )\n};\n\nexport default FormWidget;\n","import React from 'react';\n\nimport './styles.scss';\n\nconst PageTitle = (props: any): JSX.Element => {\n\n    const { title } = props;\n    \n    return (\n        <div className=\"page-title\">\n            {title.toUpperCase()}\n        </div>\n    )\n};\n\nexport default PageTitle;\n","import React from 'react';\n\nimport './styles.scss';\n\nimport { Table } from 'react-bootstrap';\n\nconst DataTable = (props: any): JSX.Element => {\n\n    const { rows } = props;\n    \n    return (\n        <div className=\"table-container\">\n            <div className=\"table-title\">\n                DATA TABLE\n            </div>\n            <Table responsive=\"lg\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Age</th>\n                        <th>Height</th>\n                        <th>Hair Color</th>\n                        <th>Eyes Color</th>\n                        <th>Minted Timestamp</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map((rowData: any, index: number) => (\n                        <tr key={index}>\n                            {Object.keys(rowData).map((cellData: any, i: number) => {\n                                return <td key={i}>{rowData[cellData]}</td>;\n                            })}\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n        </div>\n    )\n};\n\nexport default DataTable;\n","import { Dashboard } from './Dashboard';\n\n// eslint-disable-next-line\nexport default Dashboard;","import React, { useEffect, useState, useCallback } from 'react';\nimport Web3 from \"web3\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { Col, Row } from 'react-bootstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport moment from 'moment';\n\nimport { ContractData } from 'library/utilities/ContractData';\nimport DashboardFormConfig from 'library/utilities/DashboardFormsConfig';\nimport { getOwner, addressIsMinter, getTokenLength, getTokenData } from 'main/api/web3.service';\nimport { AttributeTypes, FormTypes } from 'library/common/Types/enums';\n\nimport { ModuleWrap } from 'resources/Styles/GlobalStyles';\nimport FormWidget from './Components/FormWidget';\nimport PageTitle from 'library/common/Components/PageTitle';\nimport DataTable from './Components/DataTable';\n\nimport './Dashboard.scss';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const Dashboard = (props: any): JSX.Element => {\n    const [contextInformation, setContextInformation] = useState<any>({});\n    const [contract, setContract] = useState<any>();\n\n    const [isOwner, setIsOwner] = useState(false);\n    const [isMinter, setIsMinter] = useState(false);\n    const [rolesChecked, setRolesChecked] = useState(false);\n\n    const [tableData,setTableData] = useState<Array<any>>([]);\n    const [dataFetched, setFetchedData] = useState(false);\n    \n    const getQueryInfo = useCallback(() => {\n        return {\n            contract,\n            querySender: {\n                from: contextInformation.walletAddress\n            }\n        }\n    }, [contract, contextInformation.walletAddress])\n\n    const checkRoles = useCallback(async () => {\n        if (await addressIsMinter(getQueryInfo())) {\n            setIsMinter(true)\n        } else {\n            setIsMinter(false);\n        }\n\n        if (await getOwner(getQueryInfo()) === contextInformation.walletAddress) {\n            setIsOwner(true);\n        }\n        \n        setRolesChecked(true);\n    }, [contextInformation.walletAddress, getQueryInfo]);\n\n    const getTokenInformation = useCallback(async (tokenId: number) => {\n        let tokenData = await getTokenData(getQueryInfo(), tokenId);\n        tokenData = {\n            id: tokenId,\n            name: tokenData.name,\n            age: tokenData.age,\n            height: tokenData.height,\n            hairColor: tokenData.hairColor,\n            eyesColor: tokenData.eyesColor,\n            mintedTimeStamp: moment.unix(tokenData.mintedTimestamp).format(\"MM/DD/YYYY\")\n        }\n        return tokenData\n    }, [getQueryInfo])\n\n    const fetchTableData = useCallback(async () => {\n        setFetchedData(true);\n        const tokenLength = await getTokenLength(getQueryInfo());\n        let tableData = [];\n\n        for (let i = 0; i < tokenLength; i++) {\n            const tokenData = await getTokenInformation(i);\n            tableData.push(tokenData);\n        }\n\n        setTableData(tableData);\n    }, [getQueryInfo, getTokenInformation])\n\n\n    useEffect(() => {\n        if (!contract && contextInformation.walletAddress) {\n            const web3Instance = new Web3(contextInformation.provider);\n            setContract(new web3Instance.eth.Contract(ContractData.abi as any, ContractData.address));\n        }\n        \n        if (contract && !rolesChecked) {\n            checkRoles();\n        }\n\n        if (contract && !dataFetched) {\n            fetchTableData();\n        }\n\n    }, [contextInformation, isMinter, tableData, contract, dataFetched, rolesChecked, checkRoles, fetchTableData])\n    \n    const filterFormsByRoles = (forOwner: boolean, forMinter: boolean) => {\n        if (\n            (forOwner && forMinter)\n            || (forOwner && isOwner)\n            || (forMinter && isMinter)\n        ) {\n            return true\n        }\n\n        return false;\n\n    }\n\n    const initiateWeb3 = async () => {\n        const { connectWallet } = props;\n        const historyState = props.history.location.state;\n        const provider = await detectEthereumProvider({\n            mustBeMetaMask: true\n        });\n\n        if (!historyState || !historyState.address) {\n            connectWallet()\n                .then((result: any) => {\n                    setContextInformation({\n                        walletAddress: result.address,\n                        provider: provider,\n                    })\n                })\n        } else {\n            setContextInformation({\n                walletAddress: historyState.address,\n                provider: provider,\n            })\n        }\n    }\n\n    if (!contextInformation.walletAddress) {\n        initiateWeb3();\n    }\n\n    const makeToast = (type: any, text?: string) => {\n        const option: any = {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: false\n        }\n\n        if (type === 'success') toast.success('Your action was successful!', option)\n\n        if (type === 'error') toast.error('There was a problem with your request!', option);\n    }\n\n    const addMintedTokenToTable = async (tokenId: number) => {\n        const tokenData = await getTokenInformation(tokenId);\n        setTableData(oldTableData => [...oldTableData, tokenData]);\n    }\n\n    const updateTokenAndAddToTable = async (formFunc: any, formValues: any, attributeType: string) => {\n        await formFunc(getQueryInfo(), formValues, AttributeTypes.EyesColor);\n        setTableData((oldTableData) => {\n            const newArray = [...oldTableData]; \n            newArray[formValues.tokenId][attributeType] = formValues.newInformation;\n            return newArray;\n        })\n    }\n\n    const handleSubmit = async (formFunc: any, formType: number, formValues: any) => {\n        switch (formType) {\n            case FormTypes.GrantMinter:\n                try {\n                    await formFunc(getQueryInfo(), formValues);\n                    makeToast('success');\n                    checkRoles();\n                } catch (error) {\n                    makeToast(error.reason, 'error');\n                }\n                return;\n                \n            case FormTypes.RemoveMinter:\n                try {\n                    await formFunc(getQueryInfo(), formValues);\n                    makeToast('success');\n                    checkRoles();\n                } catch (error) {\n                    makeToast(error.reason, 'error');\n                }\n                return;\n\n            case FormTypes.MintToken:\n                try {\n                    await formFunc(getQueryInfo(), formValues);\n                    makeToast('success');\n                    addMintedTokenToTable(await getTokenLength(getQueryInfo()) - 1)\n                } catch (error) {\n                    makeToast(error.reason, 'error');\n                }\n                return;\n\n            case FormTypes.TransferToken:\n                try {\n                    await formFunc(getQueryInfo(), formValues);\n                    makeToast('success');\n                } catch (error) {\n                    makeToast(error.reason, 'error');\n                }\n                return;\n\n            case FormTypes.ChangeAge:\n                try {\n                    await updateTokenAndAddToTable(formFunc, formValues, AttributeTypes.Age);\n                    makeToast('success');\n                } catch (error) {\n                    makeToast(error.reason, 'error');\n                }\n                return;\n\n            case FormTypes.ChangeEyesColor:\n                try {\n                    await updateTokenAndAddToTable(formFunc, formValues, AttributeTypes.EyesColor);\n                    makeToast('success');\n                } catch (error) {\n                    makeToast(error.reason, 'error');\n                }\n                return;\n\n            case FormTypes.ChangeHairColor:\n                try {\n                    await updateTokenAndAddToTable(formFunc, formValues, AttributeTypes.HairColor);\n                    makeToast('success');\n                } catch (error) {\n                    makeToast(error.reason, 'error');\n                }\n                return;\n            \n            case FormTypes.ChangeHeight:\n                try {\n                    await updateTokenAndAddToTable(formFunc, formValues, AttributeTypes.Height);\n                    makeToast('success');\n                } catch (error) {\n                    makeToast(error.reason, 'error');\n                }\n                return;\n\n            case FormTypes.ChangeName:\n                try {\n                    await updateTokenAndAddToTable(formFunc, formValues, AttributeTypes.Name);\n\n                    makeToast('success');\n                } catch (error) {\n                    makeToast(error.reason, 'error');\n                }\n                return;\n        }\n    }\n\n    const secondColumn = Math.ceil(DashboardFormConfig.length / 2);\n\n    return (\n        <>\n            <ToastContainer/>\n            <ModuleWrap className=\"scrollable-area-container\">\n                <PageTitle title=\"Dashboard\" />\n                <Row className=\"dashboard-forms\">\n                    <Col xs=\"5\">\n                        {DashboardFormConfig.slice(0,secondColumn).map((element, index) => {\n                            if (filterFormsByRoles(element.forOwner, element.forMinter))\n                                return <FormWidget\n                                    key={index}\n                                    formDetails={{\n                                        formTitle: element.title,\n                                        formType: element.formType,\n                                        fields: element.fields,\n                                        formFunc: element.formFunc\n                                    }}\n                                    handleSubmit={handleSubmit}\n                                />\n                            return null;\n                        })}\n                    </Col>\n                    <Col xs=\"5\">\n                        {DashboardFormConfig.slice(secondColumn).map((element, index) => {\n                            if (filterFormsByRoles(element.forOwner, element.forMinter))\n                                return <FormWidget\n                                    key={index}\n                                    formDetails={{\n                                        formTitle: element.title,\n                                        formType: element.formType,\n                                        fields: element.fields,\n                                        formFunc: element.formFunc\n                                    }}\n                                    handleSubmit={handleSubmit}\n                                />\n                            return null;\n                        })}\n                    </Col>\n                </Row>\n                <DataTable rows={tableData}></DataTable>\n            </ModuleWrap>\n        </>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/metamask.a4d5e8f2.jpg\";","import React from 'react';\nimport { Image } from 'react-bootstrap';\n\nimport metamask from 'resources/Images/metamask.jpg';\n\nimport './styles.scss';\n\nconst MetamaskConnecter = (props: any): JSX.Element => {\n\n    const { connectWalletAndGetAddress } = props;\n\n    return (\n        <>\n            <Image \n                className=\"metamask-image\"\n                height=\"175\" \n                onClick={connectWalletAndGetAddress} \n                src={metamask}\n            />\n        </>\n    )\n};\n\nexport default MetamaskConnecter;\n","import { WalletConnecter } from './WalletConnecter';\n\n// eslint-disable-next-line\nexport default WalletConnecter;","import PageTitle from 'library/common/Components/PageTitle';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { ModuleWrap } from 'resources/Styles/GlobalStyles';\n\nimport MetamaskConnecter from './Components/MetamaskConnecter';\n\nimport './WalletConnecter.scss';\n\nexport const WalletConnecter = (props: any): JSX.Element => {\n    const { connectWallet, shouldAutoConnect } = props;\n    const [ address, setAddress ] = useState<string>(\"\");\n    const [ showWarning, setShowWarning ] = useState<boolean>(false);\n    const history = useHistory();\n\n    const connectWalletAndGetAddress = async () => {\n        setShowWarning(true);\n        const result = await connectWallet(false)\n        setAddress(result.address);\n    }\n\n    useEffect(() => {\n        if (shouldAutoConnect) {\n            if (!address) {\n                connectWallet(true)\n                    .then((result: any) => {\n                        if (result.address) {\n                            history.push({\n                                pathname: '/dashboard',\n                                state: {\n                                    address: result.address\n                                }\n                            });\n                        }\n                    })\n                    .catch((error: any) => {\n                        console.log('Err while trying to connect wallet: ', error.status);\n                    })\n            } else {\n                history.push({\n                    pathname: '/dashboard',\n                    state: {\n                        address: address\n                    }\n                });\n            }\n        }\n    }, [address, connectWallet, history, shouldAutoConnect])\n\n    return (\n        <ModuleWrap>\n            <PageTitle title=\"Wallet Connect\" />\n\n            <MetamaskConnecter \n                connectWalletAndGetAddress={connectWalletAndGetAddress}\n            />\n            <span className=\"click-to-connect\">\n                Click on the logo above if you want to connect your wallet to the app.\n            </span>\n            {showWarning && <span className=\"accept-wallet-warning\">\n                Please accept Metamask request. If you closed the metamask window, press the logo again.\n            </span>}\n        </ModuleWrap>\n)};\n","import detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\n\nconst connectWallet = async (autoLogin: boolean) => {\n    const provider: any = await detectEthereumProvider({\n        mustBeMetaMask: true\n    });\n\n    if (provider) { //check if Metamask is installed\n        \n        try {\n            let userAddress;\n            if (autoLogin) {\n                userAddress = await new Web3(provider).eth.getAccounts();\n            } else {\n                userAddress = await new Web3(provider).eth.requestAccounts();\n            }\n            const obj = {\n                connectedStatus: true,\n                address: userAddress[0]\n            }\n            return obj;\n        } catch (error) {\n            return \"🦊 Connect to Metamask using the button on the top right.\"\n        }\n    } else {\n        return \"🦊 You must install Metamask into your browser: https://metamask.io/download.html\"\n    } \n};\n\nexport default connectWallet;","import Dashboard from 'modules/Dashboard';\nimport WalletConnecter from 'modules/WalletConnecter';\n\nimport connectWallet from 'library/utilities/connectWallet';\n\nexport const routes = [\n  {\n    exact: true,\n    path: '/',\n    render: (props: any) => <WalletConnecter connectWallet={connectWallet} shouldAutoConnect={true} {...props} />\n  },\n  {\n    exact: true,\n    path: '/dashboard',\n    render: (props: any) => <Dashboard connectWallet={connectWallet} {...props} />,\n  },\n];","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, Switch } from 'react-router-dom'; \nimport styled from 'styled-components';\n\nimport { routes } from 'main/routes';\n\nimport './App.scss';\n\nconst AppWrap = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  flex-direction: column;\n`;\n\nfunction App () {\n    return (\n        <AppWrap>\n            <h1 className=\"App-title\">\n            ERC-721\n            </h1>\n            <div className=\"App-route\">\n                <Switch>\n                    {routes.map((route, index) => (\n                    <Route\n                        key={index}\n                        {...route}\n                    />\n                    ))}\n                </Switch>\n            </div>\n        </AppWrap>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}